%{"test default product no": [%{"column_name" => "product_no",
     "data_type" => "integer"}],
  "test default products": [%{"column_name" => "product_no",
     "data_type" => "integer"},
   %{"column_name" => "name", "data_type" => "text"},
   %{"column_name" => "price", "data_type" => "numeric"}],
  "test my_first_table": [%{"column_name" => "first_column",
     "data_type" => "text"},
   %{"column_name" => "second_column", "data_type" => "integer"}],
  "test product SERIAL": [%{"column_name" => "product_no",
     "data_type" => "integer"}],
  "test products": [%{"column_name" => "product_no", "data_type" => "integer"},
   %{"column_name" => "name", "data_type" => "text"},
   %{"column_name" => "price", "data_type" => "numeric"}],
  "test products CHECK price > 0": %Postgrex.Error{connection_id: nil,
   message: nil,
   postgres: %{code: :check_violation, constraint: "products_price_check",
     detail: "Failing row contains (1, My product, -1).", file: "execMain.c",
     line: "1760",
     message: "new row for relation \"products\" violates check constraint \"products_price_check\"",
     pg_code: "23514", routine: "ExecConstraints", schema: "public",
     severity: "ERROR", table: "products", unknown: "ERROR"}},
  "test products SERIAL": [%{"column_name" => "product_no",
     "data_type" => "integer"}],
  "test products named CHECK": %Postgrex.Error{connection_id: nil, message: nil,
   postgres: %{code: :check_violation, constraint: "positive_price",
     detail: "Failing row contains (1, My product, -1).", file: "execMain.c",
     line: "1760",
     message: "new row for relation \"products\" violates check constraint \"positive_price\"",
     pg_code: "23514", routine: "ExecConstraints", schema: "public",
     severity: "ERROR", table: "products", unknown: "ERROR"}}}