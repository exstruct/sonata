%{"test default product no": [%{"column_name" => "product_no",
     "data_type" => "integer"}],
  "test default products": [%{"column_name" => "product_no",
     "data_type" => "integer"},
   %{"column_name" => "name", "data_type" => "text"},
   %{"column_name" => "price", "data_type" => "numeric"}],
  "test foreign key": %Postgrex.Error{connection_id: nil, message: nil,
   postgres: %{code: :foreign_key_violation, constraint: "t1_a_fkey",
     detail: "Key (a, b)=(1, 1) is not present in table \"other_table\".",
     file: "ri_triggers.c", line: "3324",
     message: "insert or update on table \"t1\" violates foreign key constraint \"t1_a_fkey\"",
     pg_code: "23503", routine: "ri_ReportViolation", schema: "public",
     severity: "ERROR", table: "t1", unknown: "ERROR"}},
  "test my_first_table": [%{"column_name" => "first_column",
     "data_type" => "text"},
   %{"column_name" => "second_column", "data_type" => "integer"}],
  "test not null": %Postgrex.Error{connection_id: nil, message: nil,
   postgres: %{code: :not_null_violation, column: "product_no",
     detail: "Failing row contains (null, null, null).", file: "execMain.c",
     line: "1734",
     message: "null value in column \"product_no\" violates not-null constraint",
     pg_code: "23502", routine: "ExecConstraints", schema: "public",
     severity: "ERROR", table: "products", unknown: "ERROR"}},
  "test primary key": %Postgrex.Error{connection_id: nil, message: nil,
   postgres: %{code: :unique_violation, constraint: "products_pkey",
     detail: "Key (product_no)=(1) already exists.", file: "nbtinsert.c",
     line: "433",
     message: "duplicate key value violates unique constraint \"products_pkey\"",
     pg_code: "23505", routine: "_bt_check_unique", schema: "public",
     severity: "ERROR", table: "products", unknown: "ERROR"}},
  "test primary key multiple": %Postgrex.Error{connection_id: nil, message: nil,
   postgres: %{code: :unique_violation, constraint: "products_pkey",
     detail: "Key (a, b)=(1, 2) already exists.", file: "nbtinsert.c",
     line: "433",
     message: "duplicate key value violates unique constraint \"products_pkey\"",
     pg_code: "23505", routine: "_bt_check_unique", schema: "public",
     severity: "ERROR", table: "products", unknown: "ERROR"}},
  "test products": [%{"column_name" => "product_no", "data_type" => "integer"},
   %{"column_name" => "name", "data_type" => "text"},
   %{"column_name" => "price", "data_type" => "numeric"}],
  "test products CHECK operator": %Postgrex.Error{connection_id: nil,
   message: nil,
   postgres: %{code: :check_violation, constraint: "products_price_check",
     detail: "Failing row contains (1, My product, -1).", file: "execMain.c",
     line: "1760",
     message: "new row for relation \"products\" violates check constraint \"products_price_check\"",
     pg_code: "23514", routine: "ExecConstraints", schema: "public",
     severity: "ERROR", table: "products", unknown: "ERROR"}},
  "test products CHECK price > 0": %Postgrex.Error{connection_id: nil,
   message: nil,
   postgres: %{code: :check_violation, constraint: "products_price_check",
     detail: "Failing row contains (1, My product, -1).", file: "execMain.c",
     line: "1760",
     message: "new row for relation \"products\" violates check constraint \"products_price_check\"",
     pg_code: "23514", routine: "ExecConstraints", schema: "public",
     severity: "ERROR", table: "products", unknown: "ERROR"}},
  "test products SERIAL": [%{"column_name" => "product_no",
     "data_type" => "integer"}],
  "test products named CHECK": %Postgrex.Error{connection_id: nil, message: nil,
   postgres: %{code: :check_violation, constraint: "positive_price",
     detail: "Failing row contains (1, My product, -1).", file: "execMain.c",
     line: "1760",
     message: "new row for relation \"products\" violates check constraint \"positive_price\"",
     pg_code: "23514", routine: "ExecConstraints", schema: "public",
     severity: "ERROR", table: "products", unknown: "ERROR"}},
  "test references": %Postgrex.Error{connection_id: nil, message: nil,
   postgres: %{code: :foreign_key_violation,
     constraint: "orders_product_no_fkey",
     detail: "Key (product_no)=(1) is not present in table \"products\".",
     file: "ri_triggers.c", line: "3324",
     message: "insert or update on table \"orders\" violates foreign key constraint \"orders_product_no_fkey\"",
     pg_code: "23503", routine: "ri_ReportViolation", schema: "public",
     severity: "ERROR", table: "orders", unknown: "ERROR"}},
  "test references explicit": %Postgrex.Error{connection_id: nil, message: nil,
   postgres: %{code: :foreign_key_violation,
     constraint: "orders_product_no_fkey",
     detail: "Key (product_no)=(1) is not present in table \"products\".",
     file: "ri_triggers.c", line: "3324",
     message: "insert or update on table \"orders\" violates foreign key constraint \"orders_product_no_fkey\"",
     pg_code: "23503", routine: "ri_ReportViolation", schema: "public",
     severity: "ERROR", table: "orders", unknown: "ERROR"}},
  "test references pk": %Postgrex.Error{connection_id: nil, message: nil,
   postgres: %{code: :foreign_key_violation,
     constraint: "orders_product_no_fkey",
     detail: "Key (product_no)=(1) is not present in table \"products\".",
     file: "ri_triggers.c", line: "3324",
     message: "insert or update on table \"orders\" violates foreign key constraint \"orders_product_no_fkey\"",
     pg_code: "23503", routine: "ri_ReportViolation", schema: "public",
     severity: "ERROR", table: "orders", unknown: "ERROR"}},
  "test table-wide checks": %Postgrex.Error{connection_id: nil, message: nil,
   postgres: %{code: :check_violation, constraint: "products_check",
     detail: "Failing row contains (1, My product, 100, 400).",
     file: "execMain.c", line: "1760",
     message: "new row for relation \"products\" violates check constraint \"products_check\"",
     pg_code: "23514", routine: "ExecConstraints", schema: "public",
     severity: "ERROR", table: "products", unknown: "ERROR"}},
  "test unique": %Postgrex.Error{connection_id: nil, message: nil,
   postgres: %{code: :unique_violation, constraint: "products_product_no_key",
     detail: "Key (product_no)=(1) already exists.", file: "nbtinsert.c",
     line: "433",
     message: "duplicate key value violates unique constraint \"products_product_no_key\"",
     pg_code: "23505", routine: "_bt_check_unique", schema: "public",
     severity: "ERROR", table: "products", unknown: "ERROR"}},
  "test unique multiple": %Postgrex.Error{connection_id: nil, message: nil,
   postgres: %{code: :unique_violation, constraint: "products_a_b_key",
     detail: "Key (a, b)=(1, 2) already exists.", file: "nbtinsert.c",
     line: "433",
     message: "duplicate key value violates unique constraint \"products_a_b_key\"",
     pg_code: "23505", routine: "_bt_check_unique", schema: "public",
     severity: "ERROR", table: "products", unknown: "ERROR"}}}